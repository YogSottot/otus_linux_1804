#For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/sads
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
worker_rlimit_nofile 10240;

load_module /usr/lib64/nginx/modules/ngx_http_testcookie_access_module.so;

error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
        use epoll;
        worker_connections  10240;
}


http {
    #limit
	server_names_hash_bucket_size 128;
	server_names_hash_max_size 4096;
	limit_req_zone $binary_remote_addr zone=flood:50m rate=90r/s;
	limit_conn_zone $binary_remote_addr zone=addr:50m;

       
    
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;


    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

 #default config, module disabled
 # https://github.com/kyprizel/testcookie-nginx-module
    testcookie off;

    #setting cookie name
    testcookie_name BPC;

    #setting secret
    testcookie_secret 41cc0e4945e162021cfdd993f4c1104d;

    #setting session key
    testcookie_session $remote_addr;

    #setting argument name
    testcookie_arg ckattempt;

    #setting maximum number of cookie setting attempts
    testcookie_max_attempts 3;

    #setting p3p policy
    testcookie_p3p 'CP="CUR ADM OUR NOR STA NID", policyref="/w3c/p3p.xml"';

    #setting fallback url
    testcookie_fallback http://google.com/cookies.html?backurl=http://$host$request_uri;

    #configuring whitelist
    testcookie_whitelist {
        8.8.8.8/32;
        # Yandex
		77.88.0.0/18;
		87.250.224.0/19;
    }


    #setting redirect via html code
    testcookie_redirect_via_refresh on;

    #enable encryption
    testcookie_refresh_encrypt_cookie on;

    #setting encryption key
    testcookie_refresh_encrypt_cookie_key deadbeefdeadbeefdeadbeefdeadbeef;

    #setting encryption iv
    testcookie_refresh_encrypt_cookie_iv deadbeefdeadbeefdeadbeefdeadbeef;

    #setting response template
    testcookie_refresh_template '<html><body>setting cookie...<script type=\"text/javascript\" src=\"/aes.min.js\" ></script><script>function toNumbers(d){var e=[];d.replace(/(..)/g,function(d){e.push(parseInt(d,16))});return e}function toHex(){for(var d=[],d=1==arguments.length&&arguments[0].constructor==Array?arguments[0]:arguments,e="",f=0;f<d.length;f++)e+=(16>d[f]?"0":"")+d[f].toString(16);return e.toLowerCase()}var a=toNumbers("$testcookie_enc_key"),b=toNumbers("$testcookie_enc_iv"),c=toNumbers("$testcookie_enc_set");document.cookie="BPC="+toHex(slowAES.decrypt(c,2,a,b))+"; expires=Thu, 31-Dec-37 23:55:55 GMT; path=/";location.href="$testcookie_nexturl";</script></body></html>';

    server {
        listen 80 default_server;
        server_name _;
		root         /usr/share/nginx/html;
        limit_conn addr 20;
		limit_req zone=flood burst=20 nodelay;
   

        location = /aes.min.js {
            gzip  on;
            gzip_min_length 1000;
            gzip_types      text/plain;
            root /usr/share/nginx-module-testcookie/;
        }

        location = /w3c/p3p.xml {
            root /var/www/public_html;
        }

        location / {
            #enable module for specific location
            testcookie on;
            #proxy_set_header   Host             $host;
            #proxy_set_header   X-Real-IP        $remote_addr;
            #proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            #proxy_pass http://127.0.0.1:80;
        }
    }
}

    

