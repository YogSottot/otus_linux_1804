# percona_backup:
#  crontime: [cronentry] cron entry that triggers the backup
#  keep: [number] how many backups do we keep
#  destination: [destination] directory in the filesystem to put backups in
#  s3bucket: [bucketaddess] when defined, this will trigger a
#            sync from percona_backup.destination to s3 bucket
#
percona_backup: false
percona_backup_keep: 30
percona_backup_s3bucket: ""
percona_backup_gcloudbucket: ""
percona_backup_destination: /var/backups/mysql/
percona_backup_cron_time: "15 */2 * * 0-7"

percona_bind_address: "127.0.0.1"
# if defined, percona_bind_interface takes precedence over percona_bind_address
# note that percona_bind_interface *must* be defined for master slave setup to work
percona_bind_interface: false
percona_monitoring_user: false
percona_monitoring_password: false
percona_ferm_enabled: ferm_enabled | default(false)
percona_filter_allow_percona_port: []
percona_key_buffer: "16M"
percona_max_binlog_size: 100M
percona_max_connections: 151
# Max in-memory table size (seel also percona_tmp_table_size)
percona_max_heap_table_size: 16777216
percona_open_files_limit: 2565
percona_port: 3306

# Query cache tuning
percona_query_cache_limit: 1M
percona_query_cache_size: 16M
percona_query_cache_strip_comments: 0
# Cache is disabled by default
percona_query_cache_type: 0

percona_replication_user: false
percona_replication_password: false
percona_root_password: false
# Can slaves act as masters ?
percona_slaves_as_masters: false
percona_slaves_group: False
# Interface slaves are using to connect to the server
percona_slaves_interface: "{{ percona_bind_interface }}"
# Theads cache size
percona_thread_cache_size: 8
# Percona MySQL temporary directory (for temp tables)
percona_tmp_dir: /tmp
# Max in-memory tmp table size. See 
percona_tmp_table_size: 16777216
# Percona user list
# This should be set by you application, not here
percona_users: []
# percona_users:
#   - name: foo,
#     password: "bar",
#     priv: "*.*:ALL"
#     host: "somehost"
percona_version: 5.7


