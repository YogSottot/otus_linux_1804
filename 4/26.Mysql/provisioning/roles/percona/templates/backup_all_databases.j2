#!/bin/bash

########################################
#                                      #
# FILE UNDER ANSIBLE CONFIG MANAGEMENT #
#                                      #
#        keep hands away               #
#                                      #
########################################

# How many backups to keep
KEEP={{ percona_backup_keep }}
DEST="{{ percona_backup_destination }}"
PASS="{{ percona_root_password }}"

DB=`echo "show databases;" | mysql --password=$PASS | tail -n +2 | grep -v information_schema | grep -v performance_schema`
for j in $DB; do
  [[ $1 == '-v' ]] && echo -n "Backuping $j..."
  DATE=`date +%Y%m%d_%H%M%S`
  mysqldump --password=$PASS --single-transaction $j 2> /tmp/error | bzip2 > $DEST/$j-$DATE.sql.bz2
  if [ $? != 0 ]; then
    echo "Error backuping (mysqldump) $j :"
    cat /tmp/error
    echo
  else
    [[ $1 == '-v' ]] && echo done
  fi

  # remove older backups for mysqldump
  COUNT=$(( `ls  $DEST/$j-* | wc -l` - $KEEP ))
  if [ $COUNT -gt 0 ]; then
    [[ $1 == '-v' ]] && echo "Erasing $COUNT old backups (mysqldump) for $j"
    for i in `ls $DEST/$j-* | head -$COUNT`; do
      rm $i
    done
  fi

  if [ -n "{{ percona_backup_s3bucket }}" ]; then
    s3cmd sync --delete-removed {{ percona_backup_destination }}/ s3://{{ percona_backup_s3bucket }}/
  fi

  if [ -n "{{ percona_backup_gcloudbucket }}" ]; then
    gsutil -m rsync -r ${DEST} gs://{{ percona_backup_gcloudbucket }}/$(hostname)/
  fi
done

