---
# tasks file for percona-cluster
- name: Add Percona repository
  yum: name=https://www.percona.com/redir/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm state=present

- name: Install packages
  yum: name={{ item }} state=present
  with_items:
  - MySQL-python
  - Percona-XtraDB-Cluster-57
  - libselinux-python

- name: Disable selinux
  selinux: state=disabled

- name: Generate /etc/my.cnf
  template: src=my.cnf.j2 dest=/etc/my.cnf

- name: Check that test database exists
  stat: path=/var/lib/mysql/test get_checksum=False get_md5=False
  changed_when: false
  register: testdb

- name: Bootstrap cluster
  command: 'systemctl start mysql@bootstrap.service'
  run_once: true
  delegate_to: "{{ percona_cluster_bootstrap_hostname }}"
  args:
    warn: False
    creates: "/var/lib/mysql/{{ inventory_hostname }}.pid"

- name: Enable MySQL server
  service: name=mysql enabled=yes
  run_once: true
  delegate_to: "{{ percona_cluster_bootstrap_hostname }}"

- name: Change root password
  command: mysql --user="root" --password="" -e "update mysql.user set password=PASSWORD('{{ mysql_root_pass }}') where user='root'; flush privileges"
  when: testdb.stat.exists
  run_once: true
  delegate_to: "{{ percona_cluster_bootstrap_hostname }}"

- name: Check that /root/.my.cnf exists
  stat: path=/root/.my.cnf get_checksum=False get_md5=False
  changed_when: false
  register: mycnf

- name: Create /root/.my.cnf if it doesn't
  template: src=root-my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600
  when: not mycnf.stat.exists

- name: Create SST user
  mysql_user: name={{ percona_cluster_stt_user }} password={{ percona_cluster_stt_password }} priv=*.*:ALL state=present
  when: testdb.stat.exists
  run_once: true
  delegate_to: "{{ percona_cluster_bootstrap_hostname }}"

- name: Delete anonymous MySQL users
  mysql_user: name='' host_all=yes state=absent
  when: testdb.stat.exists
  run_once: true
  delegate_to: "{{ percona_cluster_bootstrap_hostname }}"

- name: Delete MySQL test database
  mysql_db: db=test state=absent
  when: testdb.stat.exists
  run_once: true
  delegate_to: "{{ percona_cluster_bootstrap_hostname }}"

- name: Enable and start MySQL server on the second node
  service: name=mysql enabled=yes state=started
  run_once: true
  delegate_to: "{{ groups.percona[1] }}"

- name: Enable and start MySQL server on the third node
  service: name=mysql enabled=yes state=started
  run_once: true
  delegate_to: "{{ groups.percona[2] }}"
