---
# Files
- name: copy backup files script
  copy:
   src: backup-tool-files.tar.gz
   dest: "{{ backup_home }}/backup-tool-files.tar.gz"
   owner: "{{ site_user }}"
  when: "'webservers' in group_names"

- name: Extract archive
  unarchive:
   src: "{{ backup_home }}/backup-tool-files.tar.gz"
   dest: "{{ backup_home }}/"
   remote_src: yes
  when: "'webservers' in group_names"

- name: Change ownership of backup installation
  file: path="{{ backup_home }}/backup-tool-filesl" owner={{ site_user }} group={{ site_user }} state=directory recurse=yes
  when: "'webservers' in group_names"

- name: copy backup script
  template:
   src: config.ini.j2
   dest: "{{ backup_home }}/backup-tool-files/config.ini"
   owner: "{{ site_user }}"
  when: "'webservers' in group_names"

- name: copy backup files script
  copy:
   src: backup-tool-files.tar.gz
   dest: "{{ backup_home }}/backup-tool-files.tar.gz"
   owner: "{{ site_user }}"
  when: "'webservers' in group_names"

# DB
- name: Add backup group
  group:
   name: "{{ site_user }}"
  when: "'percona-cluster' in group_names"

- name: Add backup user
  user:
   name: "{{ site_user }}"
   group: "{{ site_user }}"
   home: "{{ backup_home }}"
  when: "'percona-cluster' in group_names"

- name: Make backup dir
  file:
   path: "{{ backup_dir }}"
   state: directory
   owner: "{{ site_user }}"
   mode: 0755

- name: copy backup files script
  copy:
   src: backup-tool-xtrabackup.tar.gz
   dest: "{{ backup_home }}/backup-tool-xtrabackup.tar.gz"
   owner: "{{ site_user }}"
  when: "'percona-cluster' in group_names"

- name: Extract archive
  unarchive:
   src: "{{ backup_home }}/backup-tool-xtrabackup.tar.gz"
   dest: "{{ backup_home }}/"
   remote_src: yes
  when: "'percona-cluster' in group_names"

- name: Change ownership of backup installation
  file: path="{{ backup_home }}/backup-tool-xtrabackup" owner={{ site_user }} group={{ site_user }} state=directory recurse=yes
  when: "'percona-cluster' in group_names"

- name: copy backup script
  template:
   src: config.ini.j2
   dest: "{{ backup_home }}/backup-tool-xtrabackup/config.ini"
   owner: "{{ site_user }}"
  when: "'percona-cluster' in group_names"

- name: Install dependency packages for backup
  yum:
    name:
     - epel-release
    state: present

- name: Install dependency packages for backup
  yum:
    name:
     - certbot
     - python-requests
     - python-dateutil
     - python-pip
    state: present

- name: Install ftputil
  pip:
    name: ftputil
    extra_args: --user

#- name: Make backup-script dir
#  file:
#   path: "/home/{{ site_user }}/backup-script"
#   state: directory
#   owner: "{{ site_user }}"
#   mode: 0755

#- name: copy backup_db script
#  copy: src=backup_db.sh dest=/home/{{ site_user }}/backup-script/backup_db.sh mode=0755
#  when: inventory_hostgroup == "{{ xtradb_nodes_group }}"

#- name: copy backup_filesh script
#  copy: src=backup_files.sh dest=/home/{{ site_user }}/backup-script/backup_files.sh mode=0755
#  when: inventory_hostgroup == "webservers"

#- name: Add a cron job for backup db
#  cron:
#    user: "{{ wp_db_user }}"
#    name: "backup db"
#    minute: "10"
#    hour: "4"
#    job: "/home/{{ site_user }}/backup-script/backup_db.sh > /dev/null 2>&1 || true"
#  when: inventory_hostgroup == "{{ xtradb_nodes_group }}"

#- name: Add a cron job for backup web
#  cron:
#    user: "{{ site_user }}"
#    name: "backup web"
#    minute: "10"
#    hour: "5"
#    job: "/home/{{ site_user }}/backup-script/backup_files.sh /srv/wordpress > /dev/null 2>&1 || true"
#  when: inventory_hostgroup == "webservers"
